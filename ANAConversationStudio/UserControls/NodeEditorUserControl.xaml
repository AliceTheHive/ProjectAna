<UserControl x:Class="ANAConversationStudio.UserControls.NodeEditorUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:uc="clr-namespace:ANAConversationStudio.UserControls"
        xmlns:ui="clr-namespace:ANAConversationStudio.UIHelpers"
        xmlns:chat="clr-namespace:ANAConversationStudio.Models.Chat"
        xmlns:chatSections="clr-namespace:ANAConversationStudio.Models.Chat.Sections"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="White"
        mc:Ignorable="d" 
        d:DesignHeight="700" d:DesignWidth="400">
    <UserControl.Resources>
        <ui:NodeTypeToGroupVisibilityConverter x:Key="NodeTypeToGroupVisibilityConverter" />
        <ui:EditSectionTemplateSelector x:Key="EditSectionTemplateSelector" />
        <ui:ObservableCollectionStringJoinConverter x:Key="ObservableCollectionStringJoinConverter"/>
        <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Margin" Value="0,0,0,5"/>
        </Style>
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Margin" Value="0,5" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Margin" Value="3,5" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="uc:TableRowUserControl" >
            <Setter Property="LabelWidth" Value="120" />
        </Style>
        <Style x:Key="ToolTextButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignToolButton}" >
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="NodeTypeIconTextblockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource MDL2Assets}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="ToolTip" >
                <Setter.Value>
                    <TextBlock>
                    <Run Text="{Binding NodeType}" /><Run Text=" Node" />
                    </TextBlock>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="Text" Value="{Binding NodeType, Converter={StaticResource ButtonSectionTypeSymbolConverter}}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="AddSectionButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
            <Setter Property="Content" >
                <Setter.Value>
                    <TextBlock Text="&#xE948;" FontSize="20" VerticalAlignment="Center" FontFamily="{StaticResource MDL2Assets}"/>
                </Setter.Value>
            </Setter>
            
            <Setter Property="ToolTip" Value="Add Section"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
            <Setter Property="Background" Value="{StaticResource ANAGreenBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ANAGreenBrush}"/>
        </Style>

    </UserControl.Resources>
    <Grid Visibility="{Binding ChatNode, Converter={StaticResource N2V}}">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TabControl>
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Border x:Name="grid" Background="{StaticResource PrimaryHueLightBrush}" Padding="4">
                                    <ContentPresenter>
                                        <ContentPresenter.Content>
                                            <TextBlock x:Name="gridText" Text="{TemplateBinding Content}"/>
                                        </ContentPresenter.Content>
                                    </ContentPresenter>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}" Value="True">
                                        <Setter TargetName="grid" Property="Background" Value="White"/>
                                        <Setter TargetName="gridText" Property="Foreground" Value="Black"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="Node Info">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <GroupBox Header="{Binding ChatNode}" Margin="0">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Style="{StaticResource NodeTypeIconTextblockStyle}" Grid.Column="0"/>
                                    <TextBlock VerticalAlignment="Center" Grid.Column="1">
                                        <Run  Text="Node: "/><Run  Text="{Binding Alias}"/>
                                    </TextBlock>
                                    <Button Grid.Column="2" Style="{DynamicResource ToolTextButtonStyle}" Content="Copy Id" ToolTip="Copy node id to clipboard" Click="CopyNodeIdClick"/>
                                </Grid>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <StackPanel>
                            <StackPanel Margin="10">
                                <uc:TableRowUserControl Label="Name">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Type">
                                    <uc:TableRowUserControl.Field>
                                        <ComboBox ItemsSource="{Binding NodeTypes}" SelectedItem="{Binding ChatNode.NodeType, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Mark as start node">
                                    <uc:TableRowUserControl.Field>
                                        <CheckBox IsChecked="{Binding ChatNode.IsStartNode, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Variable Name">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.VariableName, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Timeout (ms)" ToolTip="Timeout in milliseconds. After this time, the default button of this node will be activated automatically">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.TimeoutInMs, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                            </StackPanel>
                            <GroupBox Header="API Call Details"  Visibility="{Binding ChatNode.NodeType, Converter={StaticResource NodeTypeToGroupVisibilityConverter}, ConverterParameter={x:Static chat:NodeTypeEnum.ApiCall}}">
                                <StackPanel>
                                    <uc:TableRowUserControl Label="API Method">
                                        <uc:TableRowUserControl.Field>
                                            <ComboBox SelectedItem="{Binding ChatNode.ApiMethod, Mode=TwoWay}" ItemsSource="{Binding APIMethods}" >
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}" Padding="4"/>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </uc:TableRowUserControl.Field>
                                    </uc:TableRowUserControl>
                                    <uc:TableRowUserControl Label="API Url">
                                        <uc:TableRowUserControl.Field>
                                            <TextBox Text="{Binding ChatNode.ApiUrl, Mode=TwoWay}" />
                                        </uc:TableRowUserControl.Field>
                                    </uc:TableRowUserControl>
                                    <uc:TableRowUserControl Label="Next Node Id">
                                        <uc:TableRowUserControl.Field>
                                            <TextBox Text="{Binding ChatNode.NextNodeId, Mode=TwoWay}" />
                                        </uc:TableRowUserControl.Field>
                                    </uc:TableRowUserControl>
                                    <!--
                                    Actual interpretation still pending!
                                    <uc:TableRowUserControl Label="API Response Data Root">
                                        <uc:TableRowUserControl.Field>
                                            <TextBox Text="{Binding ChatNode.ApiResponseDataRoot, Mode=TwoWay}" />
                                        </uc:TableRowUserControl.Field>
                                    </uc:TableRowUserControl>-->
                                    <uc:TableRowUserControl Label="Required Variables">
                                        <uc:TableRowUserControl.Field>
                                            <TextBox Text="{Binding ChatNode.RequiredVariables, Converter={StaticResource ObservableCollectionStringJoinConverter}, Mode=TwoWay}" AcceptsReturn="True" />
                                        </uc:TableRowUserControl.Field>
                                    </uc:TableRowUserControl>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Card Details" Visibility="{Binding ChatNode.NodeType, Converter={StaticResource NodeTypeToGroupVisibilityConverter}, ConverterParameter={x:Static chat:NodeTypeEnum.Card}}">
                                <StackPanel>
                                    <uc:TableRowUserControl Label="Header">
                                        <uc:TableRowUserControl.Field>
                                            <TextBox Text="{Binding ChatNode.CardHeader, Mode=TwoWay}" />
                                        </uc:TableRowUserControl.Field>
                                    </uc:TableRowUserControl>
                                    <uc:TableRowUserControl Label="Footer">
                                        <uc:TableRowUserControl.Field>
                                            <TextBox Text="{Binding ChatNode.ApiResponseDataRoot, Mode=TwoWay}" />
                                        </uc:TableRowUserControl.Field>
                                    </uc:TableRowUserControl>
                                    <uc:TableRowUserControl Label="Placement">
                                        <uc:TableRowUserControl.Field>
                                            <ComboBox SelectedItem="{Binding ChatNode.Placement, Mode=TwoWay}" ItemsSource="{Binding PlacementOptions}"/>
                                        </uc:TableRowUserControl.Field>
                                    </uc:TableRowUserControl>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Content">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <GroupBox Header="Content" Margin="0">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <StackPanel>
                            <ItemsControl ItemsSource="{Binding ChatNode.Sections}" ItemTemplateSelector="{StaticResource EditSectionTemplateSelector}"/>
                            <Button Style="{StaticResource AddSectionButtonStyle}" Grid.Column="1">
                                <Button.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Text" Click="AddSectionClick" Tag="{x:Static chatSections:SectionTypeEnum.Text}"/>
                                        <MenuItem Header="Image" Click="AddSectionClick" Tag="{x:Static chatSections:SectionTypeEnum.Image}" />
                                        <MenuItem Header="Gif" Click="AddSectionClick" Tag="{x:Static chatSections:SectionTypeEnum.Gif}"/>
                                        <MenuItem Header="Audio" Click="AddSectionClick" Tag="{x:Static chatSections:SectionTypeEnum.Audio}"/>
                                        <MenuItem Header="Video" Click="AddSectionClick" Tag="{x:Static chatSections:SectionTypeEnum.Video}"/>
                                        <MenuItem Header="Carousel" Click="AddSectionClick" Tag="{x:Static chatSections:SectionTypeEnum.Carousel}"/>
                                        <MenuItem Header="Embedded HTML" Click="AddSectionClick" Tag="{x:Static chatSections:SectionTypeEnum.EmbeddedHtml}"/>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </StackPanel>
                    </GroupBox>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Buttons">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <GroupBox Header="Buttons" Margin="0">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <StackPanel>
                            <ItemsControl ItemsSource="{Binding ChatNode.Buttons}" ItemTemplate="{StaticResource ChatButtonEditTemplate}"/>
                            <Button Style="{StaticResource AddButtonStyle}" Grid.Column="1" Click="AddButtonClick" ToolTip="Add Button"/>
                        </StackPanel>
                    </GroupBox>
                </ScrollViewer>
            </TabItem>
        </TabControl>

        <!--<Grid Grid.Row="1">
            <Button Content="Done" Click="DoneButtonClick" HorizontalAlignment="Center" Margin="10,5"/>
        </Grid>-->
    </Grid>
</UserControl>
