<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:uc="clr-namespace:ANAConversationStudio.UserControls"
                    xmlns:dialogs="clr-namespace:ANAConversationStudio.Dialogs"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FontFamily x:Key="MDL2Assets">pack://application:,,,/Resources/#Segoe MDL2 Assets</FontFamily>
    <Style x:Key="EditorItemBorderStyle" TargetType="Border" >
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    <dialogs:ButtonSectionTypeSymbolConverter x:Key="ButtonSectionTypeSymbolConverter"/>
    <dialogs:ButtonTypeToFieldVisibilityConverter x:Key="ButtonTypeToFieldVisibilityConverter"/>
    <BooleanToVisibilityConverter x:Key="B2V"/>

    <Style x:Key="SectionEditorDeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Command" Value="{Binding Remove}" />
        <Setter Property="CommandParameter" Value="{Binding}" />
        <Setter Property="Content" Value="&#xE107;" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="Margin" Value="20,0,0,0" />
    </Style>
    <Style x:Key="SectionTypeIconTextblockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <!--FontFamily="" FontSize="20" VerticalAlignment="Center"-->
        <Setter Property="FontFamily" Value="{StaticResource MDL2Assets}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="ToolTip" Value="{Binding SectionType}"/>
        <Setter Property="Margin" Value="0,0,15,0"/>
        <Setter Property="Text" Value="{Binding SectionType, Converter={StaticResource ButtonSectionTypeSymbolConverter}}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ButtonTypeIconTextblockStyle" TargetType="TextBlock">
        <!--FontFamily="" FontSize="20" VerticalAlignment="Center"-->
        <Setter Property="FontFamily" Value="{StaticResource MDL2Assets}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="ToolTip" Value="{Binding ButtonType}"/>
        <Setter Property="Margin" Value="0,0,15,0"/>
        <Setter Property="Text" Value="{Binding ButtonType, Converter={StaticResource ButtonSectionTypeSymbolConverter}}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <DataTemplate x:Key="TextSectionEditTemplate">
        <GroupBox Header="{Binding Alias}" HeaderStringFormat="Section: {0}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <TextBlock Style="{StaticResource SectionTypeIconTextblockStyle}" />
                </Grid>
                <StackPanel Grid.Column="1">
                    <uc:TableRowUserControl Label="Text">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True" TextWrapping="Wrap"/>
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                </StackPanel>
                <Button Grid.Column="2" Style="{StaticResource SectionEditorDeleteButtonStyle}"/>
            </Grid>
        </GroupBox>
    </DataTemplate>
    <DataTemplate x:Key="TitleCaptionUrlSectionEditTemplate">
        <GroupBox Header="{Binding Alias}" HeaderStringFormat="Section: {0}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <TextBlock Style="{StaticResource SectionTypeIconTextblockStyle}" />
                </Grid>
                <StackPanel Grid.Column="1">
                    <uc:TableRowUserControl Label="Title">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True" TextWrapping="Wrap"/>
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="Url">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding Url, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="Caption">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding Caption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True" TextWrapping="Wrap"/>
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                </StackPanel>
                <Button Grid.Column="2" Style="{StaticResource SectionEditorDeleteButtonStyle}"/>
            </Grid>
        </GroupBox>
    </DataTemplate>
    <DataTemplate x:Key="ChatButtonEditTemplate">
        <GroupBox Header="{Binding Alias}" HeaderStringFormat="Button: {0}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <TextBlock Style="{StaticResource ButtonTypeIconTextblockStyle}" />
                </Grid>
                <StackPanel Grid.Column="1">
                    <uc:TableRowUserControl Label="Type">
                        <uc:TableRowUserControl.Field>
                            <ComboBox SelectedItem="{Binding ButtonType, Mode=TwoWay}" ItemsSource="{Binding ButtonTypes}"/>
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="Text">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding ButtonText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="Placeholder" Visibility="{Binding ButtonType, Converter={StaticResource ButtonTypeToFieldVisibilityConverter}, ConverterParameter=PlaceholderText}">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding PlaceholderText, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="DeepLink Url" Visibility="{Binding ButtonType, Converter={StaticResource ButtonTypeToFieldVisibilityConverter}, ConverterParameter=DeepLinkUrl}">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding DeepLinkUrl, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="Url" Visibility="{Binding ButtonType, Converter={StaticResource ButtonTypeToFieldVisibilityConverter}, ConverterParameter=Url}">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding Url, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    
                    
                    <uc:TableRowUserControl Label="Variable Value">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding VariableValue, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="Prefix" Visibility="{Binding ButtonType, Converter={StaticResource ButtonTypeToFieldVisibilityConverter}, ConverterParameter=PrefixText}">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding PrefixText, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="Postfix" Visibility="{Binding ButtonType, Converter={StaticResource ButtonTypeToFieldVisibilityConverter}, ConverterParameter=PostfixText}">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding PostfixText, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>

                    <uc:TableRowUserControl Label="API Response Match Key" Visibility="{Binding ButtonType, Converter={StaticResource ButtonTypeToFieldVisibilityConverter}, ConverterParameter=APIResponseMatchKey}">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding APIResponseMatchKey, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <uc:TableRowUserControl Label="API Response Match Value" Visibility="{Binding ButtonType, Converter={StaticResource ButtonTypeToFieldVisibilityConverter}, ConverterParameter=APIResponseMatchValue}">
                        <uc:TableRowUserControl.Field>
                            <TextBox Text="{Binding APIResponseMatchValue, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>

                    <uc:TableRowUserControl Label="Does Repeat" >
                        <uc:TableRowUserControl.Field>
                            <CheckBox IsChecked="{Binding DoesRepeat, Mode=TwoWay}" />
                        </uc:TableRowUserControl.Field>
                    </uc:TableRowUserControl>
                    <StackPanel Visibility="{Binding DoesRepeat, Converter={StaticResource B2V}}">
                        <uc:TableRowUserControl Label="Repeat On">
                            <uc:TableRowUserControl.Field>
                                <TextBox Text="{Binding RepeatOn, Mode=TwoWay}" />
                            </uc:TableRowUserControl.Field>
                        </uc:TableRowUserControl>
                        <uc:TableRowUserControl Label="Repeat As">
                            <uc:TableRowUserControl.Field>
                                <TextBox Text="{Binding RepeatAs, Mode=TwoWay}" />
                            </uc:TableRowUserControl.Field>
                        </uc:TableRowUserControl>
                        <uc:TableRowUserControl Label="Start Position">
                            <uc:TableRowUserControl.Field>
                                <TextBox Text="{Binding StartPosition, Mode=TwoWay}" InputScope="Number"/>
                            </uc:TableRowUserControl.Field>
                        </uc:TableRowUserControl>
                        <uc:TableRowUserControl Label="Max Repeats">
                            <uc:TableRowUserControl.Field>
                                <TextBox Text="{Binding MaxRepeats, Mode=TwoWay}" InputScope="Number"/>
                            </uc:TableRowUserControl.Field>
                        </uc:TableRowUserControl>
                    </StackPanel>

                    <Grid HorizontalAlignment="Stretch" Margin="0,20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>
                        <CheckBox IsChecked="{Binding DefaultButton, Mode=TwoWay}" Content="Is Default" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding PostToChat, Mode=TwoWay}" Content="Post To Chat" Grid.Column="1"/>
                        <CheckBox IsChecked="{Binding Hidden, Mode=TwoWay}" Content="Is Hidden" Grid.Column="2"/>
                    </Grid>
                </StackPanel>
                <Button Grid.Column="2" Style="{StaticResource SectionEditorDeleteButtonStyle}"/>
            </Grid>
        </GroupBox>
    </DataTemplate>
</ResourceDictionary>