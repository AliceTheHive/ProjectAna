language: node_js
node_js:
  - "v9.5.0"

os:
  - linux
  - osx

matrix:
  allow_failures:
    - os: osx

addons:
  apt:
    packages:
      - graphviz

sudo: true
dist: trusty

branches:
  only:
    - master
    - release
    - public-beta
    - release-beta

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install graphviz; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install yarn --without-node; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update; fi

install:
  - bash <(curl -s https://codecov.io/bash)
  - npm i -g npm@5.6.0 # this should be deleted once 5.7.X is out of "pre-release"
  - npm install          # instead of default npm install 
  - npm i @angular-devkit/core
  - npm install -g @angular/cli@1.6.1
  - npm i node-sass

before_script:
  - mkdir dist2
  - ng build --prod --aot=false
  #Cloning other repos
  - git clone https://github.com/Kitsune-tools/Ana-Analytics-Dashboard.git
  - git clone https://github.com/Kitsune-tools/ANAChat-Web.git
  - rm -rf node_modules/
  #For analytics-dash
  - cd Ana-Analytics-Dashboard/
  - npm install typings -g
  - npm i @angular-devkit/core
  - npm install -g @angular/cli@1.6.1
  - npm i node-sass
  - npm install
  - ng build --prod --aot=false
  - cd ..
  - mkdir dist2/analytics-dashboard
  - cp -R Ana-Analytics-Dashboard/dist/* dist2/analytics-dashboard/
  - ls -l
  - ls -l Ana-Analytics-Dashboard/
  #For Chat-Web
  - cd ANAChat-Web/
  - npm i node-sass
  - npm install
  - ng build --prod --aot=false
  - cd ..
  - mkdir dist2/simulator  # For web chat
  - ls -l ANAChat-Web/
  - cp -R ANAChat-Web/dist/* dist2/simulator/
  # For ana APP
  - npm cache verify
  - npm install -g npm@5.6.0
  - ls -l
  - ls -l
  - mkdir dist/simulator
  - mkdir dist/analytics-dashboard
  - cp -R dist2/simulator/* dist/simulator/
  - cp -R dist2/analytics-dashboard/* dist/analytics-dashboard/
  
script:
  - cd dist/
  - yarn add electron-builder@19.56.0 --dev
  # - npm install -g electron-builder
  - npm install -g popper.js
  - npm install -g jquery
  - npm install --dev
  - electron-builder && cd ..
  - cp deploy.sh release/
  - cd release
  - ls -l
after_success:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then which python; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then pip install awscli --upgrade --user; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then ls -al /usr/local/bin/python; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then export PATH=~/.local/bin:$PATH; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then source ~/.bash_profile; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp *.AppImage s3://ana-content/cdn/dist/ana-app/linux-ia32/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp *.AppImage s3://ana-content/cdn/dist/ana-app/linux-x64/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp latest-linux.yml s3://ana-content/cdn/dist/ana-app/linux-ia32/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp latest-linux.yml s3://ana-content/cdn/dist/ana-app/linux-x64/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 ls s3://ana-content/cdn/dist/ana-app/linux-ia32/ --human-readable --summarize; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 ls s3://ana-content/cdn/dist/ana-app/linux-x64/ --human-readable --summarize; fi
  # Mac only Upload to s3
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws --version; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then which python; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then ls -al /usr/local/bin/python; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then export PATH=~/.local/bin:$PATH; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then source ~/.bash_profile; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp *.dmg s3://ana-content/cdn/dist/ana-app/mac-x64/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp *.dmg.blockmap s3://ana-content/cdn/dist/ana-app/mac-x64/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp *.zip s3://ana-content/cdn/dist/ana-app/mac-x64/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp latest-mac.json s3://ana-content/cdn/dist/ana-app/mac-x64/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 cp latest-mac.yml s3://ana-content/cdn/dist/ana-app/mac-x64/ --acl public-read; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && ( [ "$TRAVIS_BRANCH" == "release" ] || [ "$TRAVIS_BRANCH" == "release-beta" ] ); then aws s3 ls s3://ana-content/cdn/dist/ana-app/mac-x64/ --human-readable --summarize; fi
notifications:
  email:
    - soumyajit.dutta@nowfloats.com
    - khaja.nizamuddin@nowfloats.com