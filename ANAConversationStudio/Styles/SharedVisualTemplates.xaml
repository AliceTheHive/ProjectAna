<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:NetworkUI="clr-namespace:NetworkUI;assembly=NetworkUI"
    >

    <BooleanToVisibilityConverter
        x:Key="booleanToVisibilityConverter" 
        />

    <SolidColorBrush
        x:Key="connectorBackgroundBrush"
        Color="White"
        />

    <!-- Default style and control-template for 'NodeItem'. -->
    <Style TargetType="NetworkUI:NodeItem" >

        <!-- Data-bind the parent NetworkView. -->
        <Setter Property="ParentNetworkView" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type NetworkUI:NetworkView}}}" />

        <!-- Set the position of the node within the canvas. -->
        <Setter
            Property="Canvas.Left"
            Value="{Binding X, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />
        <Setter
            Property="Canvas.Top"
            Value="{Binding Y, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />

        <!-- Set the z-order of the node within the canvas. -->
        <Setter
            Property="Canvas.ZIndex"
            Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            />

        <!-- Set defaults for background and border. -->
        <Setter 
            Property="Background" 
            Value="Transparent" 
            />
        <Setter 
            Property="BorderBrush" 
            Value="Transparent" 
            />
        <Setter 
            Property="BorderThickness" 
            Value="1" 
            />

        <!-- The control-template for the node. -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type NetworkUI:NodeItem}"
                    >
                    <Grid>

                        <!-- 
                        This border indicates that node is selected.
                        Normally it is transparent, but when 'IsSelected' is set
                        to 'true' the border brush becomes blue and its background
                        becomes light blue.
                        -->
                        <Border
                            x:Name="selectionBorder"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="8"
                            >

                            <!-- 
                            User-defined node content is presented here. 
                            -->
                            <ContentPresenter />

                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger 
                            Property="IsSelected"
                            Value="True"
                            >

                            <!-- When the node is selected, set the color of 'selectionBorder' to blue. -->
                            <Setter
                                TargetName="selectionBorder"
                                Property="BorderBrush"
                                Value="{StaticResource selectionBorderColor}"
                                />
                        </Trigger>

                        <Trigger 
                            Property="IsSelected"
                            Value="True"
                            >

                            <!-- When the node is selected, set the background of 'selectionBorder' to light blue. -->
                            <Setter
                                TargetName="selectionBorder"
                                Property="Background"
                                Value="{StaticResource selectionBorderBackgroundColor}"
                                />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="X"
            Value="{Binding X}"
            />
        <Setter
            Property="Y"
            Value="{Binding Y}"
            />
        <Setter
            Property="ZIndex"
            Value="{Binding ZIndex}"
            />
        <Setter
            Property="IsSelected"
            Value="{Binding IsSelected}"
            />
    </Style>


    <!-- 
    A data-template that defines the UI for input connectors.
    -->
    <DataTemplate x:Key="inputConnectorTemplate" >
        <Grid
            Margin="0,2,0,0"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- The 'ConnectorItem' or anchor point for the connector. -->
            <NetworkUI:ConnectorItem 
                Grid.Column="0"
                Width="15"
                Height="15"
                Cursor="Hand"                    
                />

            <!-- The name of the connector. -->
            <TextBlock
                Grid.Column="1"
                Margin="5,0,0,0"
                Text="{Binding Name}"
                VerticalAlignment="Center"
                />

            <Ellipse
                    Visibility="{Binding IsConnectionAttached, Converter={StaticResource booleanToVisibilityConverter}}"
                    Margin="3"
                    Fill="{StaticResource connectionBrush}"
                    IsHitTestVisible="False"
                    />
        </Grid>
    </DataTemplate>

    <!-- 
    A data-template that defines the UI for output connectors.
    -->
    <DataTemplate
        x:Key="outputConnectorTemplate"
        >
        <Grid
            HorizontalAlignment="Right"
            Margin="5,2,5,0"
            >
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Button.ButtonType, Converter={StaticResource ButtonSectionTypeSymbolConverter}}" FontFamily="{StaticResource MDL2Assets}" VerticalAlignment="Center" Margin="0,0,5,0">
                <TextBlock.ToolTip>
                    <TextBlock>
                        <Run Text="{Binding Button.ButtonType}"/><Run Text=" Button"/>
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>

            <!-- The name of the connector. -->
            <TextBlock
                Text="{Binding Button.Alias}"
                FontStyle="Italic"
                VerticalAlignment="Center"
                Margin="0,0,0,10"
                Grid.Row="1"
                />

            <Grid
                Grid.Row="2"
                Width="15"
                Height="15"
                Cursor="Hand"
                >

                <!-- The 'ConnectorItem' or anchor point for the connector. -->
                <NetworkUI:ConnectorItem />

                <!-- Show a black dot at the start of the arrow when connected. -->
                <Ellipse
                    Visibility="{Binding IsConnectionAttached, Converter={StaticResource booleanToVisibilityConverter}}"
                    Margin="3"
                    Fill="{Binding ParentNode.IsSelected, Converter={StaticResource SelectionToFillBrushConverter}}"
                    IsHitTestVisible="False"
                    />
            </Grid>
        </Grid>
    </DataTemplate>

</ResourceDictionary>