<Window x:Class="ANAConversationStudio.Dialogs.NodeEditDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:uc="clr-namespace:ANAConversationStudio.UserControls"
        xmlns:local="clr-namespace:ANAConversationStudio.Dialogs"
        xmlns:ui="clr-namespace:ANAConversationStudio.UIHelpers"
        xmlns:ts="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
        xmlns:chat="clr-namespace:ANAConversationStudio.Models.Chat"
        xmlns:chatSections="clr-namespace:ANAConversationStudio.Models.Chat.Sections"
        
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
            
        mc:Ignorable="d"
        Unloaded="DialogUnloaded"
        Name="Dialog"
        Title="Node Edit Dialog" Height="700" Width="600">
    <Window.Resources>
        <local:NodeTypeToGroupVisibilityConverter x:Key="NodeTypeToGroupVisibilityConverter" />
        <ui:EditSectionTemplateSelector x:Key="EditSectionTemplateSelector" />
        
        <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Margin" Value="0,5" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Margin" Value="3,5" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="ts:HorizontalToggleSwitch" >
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl SelectedIndex="1" >
            <TabItem Header="Node Details">
                <ScrollViewer>
                    <!--<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="5" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="TextBox" >
                                <Setter Property="Margin" Value="5" />
                                <Setter Property="MinWidth" Value="250" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                            </Style>
                            <Style TargetType="ComboBox" >
                                <Setter Property="Margin" Value="5" />
                                <Setter Property="MinWidth" Value="250" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                            </Style>
                        </Grid.Resources>
                        
                        <TextBlock Text="Name" />
                        <TextBox Text="" Grid.Column="1" />

                        <TextBlock Text="Type" Grid.Row="1"/>
                        <ComboBox SelectedValue="" ItemsSource="{Binding NodeTypeItems}" Grid.Column="1" Grid.Row="1"/>

                        <TextBlock Text="Timeout" Grid.Row="2"/>
                        <TextBox Text="" Grid.Column="1" Grid.Row="2" InputScope="Number"/>

                        
                        
                    </Grid>-->
                    <StackPanel>
                        <TextBlock Text="&#xEB9F;" Margin="10" FontSize="20" FontFamily="{StaticResource MDL2Assets}" />
                        <GroupBox Header="General" >
                            <StackPanel>
                                <uc:TableRowUserControl Label="Name">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.Name, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Type">
                                    <uc:TableRowUserControl.Field>
                                        <ComboBox ItemsSource="{Binding NodeTypes}" SelectedItem="{Binding ChatNode.NodeType, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Mark as start node">
                                    <uc:TableRowUserControl.Field>
                                        <!--<ts:HorizontalToggleSwitch IsChecked="{Binding ChatNode.IsStartNode, Mode=TwoWay}" />-->
                                        <CheckBox IsChecked="{Binding ChatNode.IsStartNode, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="API Call Details"  Visibility="{Binding ChatNode.NodeType, Converter={StaticResource NodeTypeToGroupVisibilityConverter}, ConverterParameter={x:Static chat:NodeTypeEnum.ApiCall}}">
                            <StackPanel>
                                <uc:TableRowUserControl Label="API Method">
                                    <uc:TableRowUserControl.Field>
                                        <ComboBox SelectedItem="{Binding ChatNode.ApiMethod, Mode=TwoWay}" ItemsSource="{Binding APIMethods}" >
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" Padding="4"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="API Url">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.ApiUrl, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="API Response Data Root">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.ApiResponseDataRoot, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Required Variables">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.RequiredVariables, Mode=TwoWay}" AcceptsReturn="True" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Card Details" Visibility="{Binding ChatNode.NodeType, Converter={StaticResource NodeTypeToGroupVisibilityConverter}, ConverterParameter={x:Static chat:NodeTypeEnum.Card}}">
                            <StackPanel>
                                <uc:TableRowUserControl Label="Header">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.CardHeader, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Footer">
                                    <uc:TableRowUserControl.Field>
                                        <TextBox Text="{Binding ChatNode.ApiResponseDataRoot, Mode=TwoWay}" />
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                                <uc:TableRowUserControl Label="Placement">
                                    <uc:TableRowUserControl.Field>
                                        <ComboBox SelectedItem="{Binding ChatNode.Placement, Mode=TwoWay}" ItemsSource="{Binding PlacementOptions}"/>
                                    </uc:TableRowUserControl.Field>
                                </uc:TableRowUserControl>
                            </StackPanel>
                        </GroupBox>
                        <Button Content="Click" Click="TestButtonClick"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Sections">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Menu>
                        <MenuItem Header="Add">
                            <MenuItem Header="Text" Tag="{x:Static chatSections:SectionTypeEnum.Text}" Click="AddSectionClick"/>
                            <MenuItem Header="Image" Tag="{x:Static chatSections:SectionTypeEnum.Image}" Click="AddSectionClick"/>
                            <MenuItem Header="Gif" Tag="{x:Static chatSections:SectionTypeEnum.Gif}" Click="AddSectionClick"/>
                            <MenuItem Header="Audio" Tag="{x:Static chatSections:SectionTypeEnum.Audio}" Click="AddSectionClick"/>
                            <MenuItem Header="Video" Tag="{x:Static chatSections:SectionTypeEnum.Video}" Click="AddSectionClick"/>
                            <MenuItem Header="Carousel" Tag="{x:Static chatSections:SectionTypeEnum.Carousel}" Click="AddSectionClick"/>
                            <MenuItem Header="Embedded HTML" Tag="{x:Static chatSections:SectionTypeEnum.EmbeddedHtml}" Click="AddSectionClick"/>
                        </MenuItem>
                    </Menu>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding ChatNode.Sections}" ItemTemplateSelector="{StaticResource EditSectionTemplateSelector}"/>
                    </ScrollViewer>
                </Grid>

            </TabItem>
            <TabItem Header="Buttons">

            </TabItem>
        </TabControl>
    </Grid>
</Window>