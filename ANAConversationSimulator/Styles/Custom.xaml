<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:C4F="using:Coding4Fun.Toolkit.Controls"
                    xmlns:gif="using:XamlAnimatedGif"
                    xmlns:Behaviors="using:Template10.Behaviors"
                    xmlns:C4FConverters="using:Coding4Fun.Toolkit.Controls.Converters"
                    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
                    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
                    xmlns:UIHelpers="using:ANAConversationSimulator.UIHelpers"
                    xmlns:UIHelpersHTML2Xaml="using:ANAConversationSimulator.UIHelpers.HTML2XamlRichText"
                    xmlns:controls="using:Template10.Controls">

    <x:Double x:Key="NarrowMinWidth">0</x:Double>
    <x:Double x:Key="NormalMinWidth">521</x:Double>
    <x:Double x:Key="WideMinWidth">1200</x:Double>

    <Color x:Key="CustomColor">SteelBlue</Color>
    <Color x:Key="ContrastColor">White</Color>
    <Color x:Key="SystemAccentColor">SteelBlue</Color>
    <SolidColorBrush x:Key="TextForegroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="PaleWhiteBrush" Color="#eaedf2" />
    <SolidColorBrush x:Key="NFYellowBrush" Color="#00ADEF" />
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#ccc" />

    <Style TargetType="TextBlock" x:Key="NormalTextStyle" >
        <!--//TextWrapping="Wrap" FontSize="15" Foreground="White"-->
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}" />
    </Style>

    <Style TargetType="TextBlock" x:Key="TitleTextStyle" BasedOn="{StaticResource NormalTextStyle}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <Style TargetType="TextBlock" x:Key="CaptionTextStyle" BasedOn="{StaticResource NormalTextStyle}">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <UIHelpers:ChatBubbleTemplateSelector x:Key="ChatBubbleTemplateSelector"/>
    <UIHelpers:DirectionToAlignmentConverter x:Key="DirectionToAlignmentConverter"/>
    <UIHelpers:DirectionToBubbleDirectionConverter x:Key="DirectionToBubbleDirectionConverter"/>
    <UIHelpers:DirectionToBackgroundColorConverter x:Key="DirectionToBackgroundColorConverter"/>
    <UIHelpers:DirectionToBorderColorConverter x:Key="DirectionToBorderColorConverter"/>
    <UIHelpers:DirectionToForegroundColorConverter x:Key="DirectionToForegroundColorConverter"/>
    <UIHelpers:DirectionToTextAlignmentConverter x:Key="DirectionToTextAlignmentConverter"/>

    <UIHelpers:ButtonTypeToInputScopeConverter x:Key="ButtonTypeToInputScopeConverter"/>
    <UIHelpers:ChatButtonsTemplateSelector x:Key="ChatButtonsTemplateSelector"/>
    <C4FConverters:BooleanToVisibilityConverter x:Key="C4FB2V"/>
    <C4FConverters:StringToVisibilityConverter x:Key="C4FS2V"/>
    <UIHelpers:AutoSuggestFilterItemsConverter x:Key="AutoSuggestFilterItemsConverter"/>
    <UIHelpers:AutoSuggestFilterItemsCommand x:Key="AutoSuggestFilterItemsCommand"/>

    <!-- Section Templates -->
    <DataTemplate x:Key="TextSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <StackPanel>
                <Border Margin="0,0,0,10" BorderBrush="Black" BorderThickness="0,0,0,1" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" >
                    <TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}" FontSize="12" TextAlignment="{Binding Direction, Converter={StaticResource DirectionToTextAlignmentConverter}}"/>
                </Border>
                <RichTextBlock UIHelpersHTML2Xaml:Properties.Html="{Binding Text}" TextWrapping="Wrap" FontSize="15" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}" TextAlignment="{Binding Direction, Converter={StaticResource DirectionToTextAlignmentConverter}}"/>
                <Border Margin="0,10,0,0" BorderBrush="Black" BorderThickness="0,1,0,0" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}">
                    <TextBlock Text="{Binding Caption}" Style="{StaticResource CaptionTextStyle}" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}" FontSize="12" TextAlignment="{Binding Direction, Converter={StaticResource DirectionToTextAlignmentConverter}}"/>
                </Border>
            </StackPanel>
        </C4F:ChatBubble>
    </DataTemplate>
    <DataTemplate x:Key="PrintOTPSectionChatBubbleTemplate">
        <C4F:ChatBubble HorizontalContentAlignment="Stretch" MinWidth="300" BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <StackPanel>
                <Border  Margin="0,0,0,10" BorderBrush="Black" BorderThickness="0,0,0,1" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" >
                    <TextBlock Text="{Binding Title}" TextAlignment="{Binding Direction, Converter={StaticResource DirectionToTextAlignmentConverter}}" Style="{StaticResource TitleTextStyle}" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}" FontSize="12"/>
                </Border>
                <TextBox Width="100" InputScope="NumericPin" Text="{Binding OTP, Mode=TwoWay}" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}"/>
                <!--<RichTextBlock UIHelpersHTML2Xaml:Properties.Html="{Binding Text}" TextWrapping="Wrap" FontSize="15" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}" TextAlignment="{Binding Direction, Converter={StaticResource DirectionToTextAlignmentConverter}}"/>-->
                <Border Margin="0,10,0,0" BorderBrush="Black" BorderThickness="0,1,0,0" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}">
                    <TextBlock TextAlignment="{Binding Direction, Converter={StaticResource DirectionToTextAlignmentConverter}}" Text="{Binding Caption}" Style="{StaticResource CaptionTextStyle}" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}" FontSize="12"/>
                </Border>
            </StackPanel>
        </C4F:ChatBubble>
    </DataTemplate>

    <DataTemplate x:Key="ImageSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <StackPanel Width="200">
                <TextBlock Text="{Binding Title}" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" Style="{StaticResource TitleTextStyle}" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}"/>
                <Image Source="{Binding Url}" MaxHeight="300" Width="200" Stretch="Uniform"/>
                <TextBlock Text="{Binding Caption}" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}" Style="{StaticResource CaptionTextStyle}" Foreground="{Binding Direction, Converter={StaticResource DirectionToForegroundColorConverter}}"/>
            </StackPanel>
        </C4F:ChatBubble>
    </DataTemplate>
    <DataTemplate x:Key="CarouselSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <StackPanel Background="{StaticResource PaleWhiteBrush}">
                <TextBlock Text="{Binding Title}" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" Style="{StaticResource TitleTextStyle}" Foreground="Black" />
                <ScrollViewer MaxHeight="300" HorizontalScrollBarVisibility="Auto" Padding="-5,0" VerticalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Items}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsStackPanel Orientation="Horizontal" Margin="0,0,0,20"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid VerticalAlignment="Center" Padding="5" Margin="5" Background="White">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Image Margin="5" Source="{Binding ImageUrl}" Visibility="{Binding ImageUrl, Converter={StaticResource C4FS2V}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Text="{Binding Title}" Margin="5" TextAlignment="Center" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" Style="{StaticResource TitleTextStyle}" Foreground="Black"/>
                                    <TextBlock Grid.Row="2" Text="{Binding Caption}" Margin="5,5,5,10" TextAlignment="Center" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}" Style="{StaticResource CaptionTextStyle}"  Foreground="Black"/>
                                    <ItemsControl Grid.Row="3" ItemsSource="{Binding Buttons}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button HorizontalAlignment="Stretch" MinWidth="150" HorizontalContentAlignment="Stretch" Command="{Binding Action}" CommandParameter="{Binding}" Background="White" BorderBrush="Black" BorderThickness="1" Margin="2">
                                                    <TextBlock Text="{Binding Text}" TextWrapping="Wrap" TextAlignment="Center" />
                                                </Button>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
                <TextBlock Text="{Binding Caption}" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}" Style="{StaticResource CaptionTextStyle}"  Foreground="Black"/>
            </StackPanel>
        </C4F:ChatBubble>
    </DataTemplate>
    <DataTemplate x:Key="VideoSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <StackPanel Width="300">
                <TextBlock Text="{Binding Title}" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" Style="{StaticResource TitleTextStyle}" />
                <MediaElement Source="{Binding Url}" Height="300" Width="300" Stretch="Uniform" AreTransportControlsEnabled="True" AutoPlay="False" IsFullWindow="False" >
                    <MediaElement.TransportControls>
                        <MediaTransportControls IsCompact="False" Opacity="0.8" IsVolumeButtonVisible="True" IsFullWindowButtonVisible="True" IsZoomButtonVisible="False" />
                    </MediaElement.TransportControls>
                </MediaElement>
                <TextBlock Text="{Binding Caption}" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}" Style="{StaticResource CaptionTextStyle}"  />
            </StackPanel>
        </C4F:ChatBubble>
    </DataTemplate>
    <DataTemplate x:Key="EmbeddedHtmlSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <StackPanel Width="300">
                <TextBlock Text="{Binding Title}" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" Style="{StaticResource TitleTextStyle}" />
                <WebView Height="300" Source="{Binding Url}" />
                <HyperlinkButton NavigateUri="{Binding Url}" Visibility="{Binding DisplayOpenInBrowserButton, Converter={StaticResource C4FB2V}}" HorizontalAlignment="Right" FontSize="12" Foreground="White" Content="Open in browser"/>
                <TextBlock Text="{Binding Caption}" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}" Style="{StaticResource CaptionTextStyle}"  />
            </StackPanel>
        </C4F:ChatBubble>
    </DataTemplate>
    <DataTemplate x:Key="AudioSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <StackPanel Width="300" >
                <TextBlock Text="{Binding Title}" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" Style="{StaticResource TitleTextStyle}" />
                <MediaElement Source="{Binding Url}" Height="50" Width="300" Stretch="Uniform" AreTransportControlsEnabled="True" AutoPlay="False" IsFullWindow="False" >
                    <MediaElement.TransportControls>
                        <MediaTransportControls IsCompact="True" IsVolumeButtonVisible="True" IsFullWindowButtonVisible="False" IsZoomButtonVisible="False"/>
                    </MediaElement.TransportControls>
                </MediaElement>
                <TextBlock Text="{Binding Caption}" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}" Style="{StaticResource CaptionTextStyle}"  />
            </StackPanel>
        </C4F:ChatBubble>
    </DataTemplate>
    <DataTemplate x:Key="GifSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <StackPanel Width="200">
                <TextBlock Text="{Binding Title}" Visibility="{Binding Title, Converter={StaticResource C4FS2V}}" Style="{StaticResource TitleTextStyle}" />
                <Image gif:AnimationBehavior.SourceUri="{Binding Url}" gif:AnimationBehavior.AutoStart="True" gif:AnimationBehavior.RepeatBehavior="Forever" gif:AnimationBehavior.AnimateInDesignMode="True" MaxHeight="200" Width="200" Stretch="Uniform"/>
                <TextBlock Text="{Binding Caption}" Visibility="{Binding Caption, Converter={StaticResource C4FS2V}}" Style="{StaticResource CaptionTextStyle}"  />
            </StackPanel>
        </C4F:ChatBubble>
    </DataTemplate>
    <DataTemplate x:Key="GraphSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <TextBlock Text="[Graph Section comming soon]" TextWrapping="Wrap" FontSize="15" Foreground="White" />
        </C4F:ChatBubble>
    </DataTemplate>
    <DataTemplate x:Key="TypingSectionChatBubbleTemplate">
        <C4F:ChatBubble BorderBrush="{Binding Direction, Converter={StaticResource DirectionToBorderColorConverter}}" Background="{Binding Direction, Converter={StaticResource DirectionToBackgroundColorConverter}}" HorizontalAlignment="{Binding Direction, Converter={StaticResource DirectionToAlignmentConverter}}" ChatBubbleDirection="{Binding Direction, Converter={StaticResource DirectionToBubbleDirectionConverter}}">
            <ProgressBar IsIndeterminate="True" Width="50" IsEnabled="True" Foreground="Black"/>
        </C4F:ChatBubble>
    </DataTemplate>
    <!-- End Section Templates -->

    <!-- Button Templates -->
    <DataTemplate x:Key="ClickChatButtonTemplate">
        <!--Content="{Binding ButtonText}"-->
        <Button HorizontalAlignment="Stretch" Visibility="{Binding Visible, Converter={StaticResource C4FB2V}}" MinWidth="150" HorizontalContentAlignment="Stretch" Command="{Binding Action}" CommandParameter="{Binding}" Background="{StaticResource ButtonBackgroundBrush}">
            <TextBlock Text="{Binding ButtonText}" TextWrapping="Wrap" TextAlignment="Center" />
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="TextInputChatButtonTemplate">
        <Grid MaxWidth="400" HorizontalAlignment="Stretch" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" HorizontalAlignment="Stretch" x:Name="TextInputChatField" BorderThickness="1" UseSystemFocusVisuals="False" HorizontalContentAlignment="Stretch" Padding="7" Margin="0" Text="{Binding VariableValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" InputScope="{Binding ButtonType, Converter={StaticResource ButtonTypeToInputScopeConverter}}" PlaceholderText="{Binding PlaceholderText}">
                <TextBox.BorderBrush>
                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                </TextBox.BorderBrush>
                <Interactivity:Interaction.Behaviors>
                    <Behaviors:KeyBehavior Key="Enter">
                        <Core:InvokeCommandAction Command="{Binding Action}" CommandParameter="{Binding}"/>
                    </Behaviors:KeyBehavior>
                    <Core:EventTriggerBehavior EventName="GotFocus">
                        <Core:ChangePropertyAction PropertyName="Background" Value="Transparent"/>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </TextBox>
            <Button Grid.Column="1" MaxWidth="120" Content="{Binding ButtonText, FallbackValue=Send}" Margin="5,0,0,0" Background="{StaticResource ButtonBackgroundBrush}">
                <Interactivity:Interaction.Behaviors>
                    <Behaviors:EventTriggerBehaviorBase EventName="Tapped" >
                        <Core:InvokeCommandAction Command="{Binding Action}" CommandParameter="{Binding}"/>
                    </Behaviors:EventTriggerBehaviorBase>
                </Interactivity:Interaction.Behaviors>
            </Button>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="TextInputWithPreAndPostChatButtonTemplate">
        <Grid HorizontalAlignment="Center" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding PrefixText}" VerticalAlignment="Center"/>
                    <TextBox HorizontalAlignment="Stretch" x:Name="TextInputChatField" BorderThickness="1" UseSystemFocusVisuals="False" HorizontalContentAlignment="Stretch" Padding="7" Margin="0" Text="{Binding VariableValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" InputScope="{Binding ButtonType, Converter={StaticResource ButtonTypeToInputScopeConverter}}" PlaceholderText="{Binding PlaceholderText}">
                        <TextBox.BorderBrush>
                            <SolidColorBrush Color="Black" Opacity="0.5"/>
                        </TextBox.BorderBrush>
                        <Interactivity:Interaction.Behaviors>
                            <Behaviors:KeyBehavior Key="Enter">
                                <Core:InvokeCommandAction Command="{Binding Action}" CommandParameter="{Binding}"/>
                            </Behaviors:KeyBehavior>
                            <Core:EventTriggerBehavior EventName="GotFocus">
                                <Core:ChangePropertyAction PropertyName="Background" Value="Transparent"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </TextBox>
                    <TextBlock Text="{Binding PostfixText}" VerticalAlignment="Center"/>
                </StackPanel>
            </ScrollViewer>
            <Button Grid.Column="1" MaxWidth="120" Content="{Binding ButtonText, FallbackValue=Send}" Margin="5,0,0,0" Background="{StaticResource ButtonBackgroundBrush}">
                <Interactivity:Interaction.Behaviors>
                    <Behaviors:EventTriggerBehaviorBase EventName="Tapped" >
                        <Core:InvokeCommandAction Command="{Binding Action}" CommandParameter="{Binding}"/>
                    </Behaviors:EventTriggerBehaviorBase>
                </Interactivity:Interaction.Behaviors>
            </Button>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="TextAutoCompleteInputPrePostfixChatButtonTemplate">
        <Grid HorizontalAlignment="Center" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding PrefixText}" VerticalAlignment="Center"/>
                    <AutoSuggestBox MinWidth="300" ItemsSource="{Binding Items}" HorizontalAlignment="Stretch"  x:Name="TextAutoCompleteInputChatField" UpdateTextOnSelect="True" BorderThickness="1" UseSystemFocusVisuals="False" HorizontalContentAlignment="Stretch" Padding="7" Margin="0" Text="{Binding VariableValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="{Binding PlaceholderText}" DisplayMemberPath="Value" TextMemberPath="Value">
                        <AutoSuggestBox.TextBoxStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="TextWrapping"  Value="Wrap"/>
                            </Style>
                        </AutoSuggestBox.TextBoxStyle>
                        <AutoSuggestBox.BorderBrush>
                            <SolidColorBrush Color="Black" Opacity="0.5"/>
                        </AutoSuggestBox.BorderBrush>
                        <Interactivity:Interaction.Behaviors>
                            <Behaviors:KeyBehavior Key="Enter">
                                <Core:InvokeCommandAction Command="{Binding Action}" CommandParameter="{Binding}"/>
                            </Behaviors:KeyBehavior>
                            <Core:EventTriggerBehavior EventName="GotFocus">
                                <Core:ChangePropertyAction PropertyName="Background" Value="Transparent"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="TextChanged">
                                <Core:InvokeCommandAction Command="{StaticResource AutoSuggestFilterItemsCommand}" CommandParameter="{Binding}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </AutoSuggestBox>
                    <TextBlock Text="{Binding PostfixText}" VerticalAlignment="Center"/>
                </StackPanel>
            </ScrollViewer>
            <Button Grid.Column="1" MaxWidth="120" Content="{Binding ButtonText, FallbackValue=Send}" Margin="5,0,0,0" Background="{StaticResource ButtonBackgroundBrush}">
                <Interactivity:Interaction.Behaviors>
                    <Behaviors:EventTriggerBehaviorBase EventName="Tapped" >
                        <Core:InvokeCommandAction Command="{Binding Action}" CommandParameter="{Binding}"/>
                    </Behaviors:EventTriggerBehaviorBase>
                </Interactivity:Interaction.Behaviors>
            </Button>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="TextAutoCompleteInputChatButtonTemplate">
        <Grid MaxWidth="400" HorizontalAlignment="Stretch" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <AutoSuggestBox ItemsSource="{Binding Items}" HorizontalAlignment="Stretch"  x:Name="TextAutoCompleteInputChatField" UpdateTextOnSelect="True" BorderThickness="1" UseSystemFocusVisuals="False" HorizontalContentAlignment="Stretch" Padding="7" Margin="0" Text="{Binding VariableValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="{Binding PlaceholderText}" DisplayMemberPath="Value" TextMemberPath="Value">
                <AutoSuggestBox.TextBoxStyle>
                    <Style TargetType="TextBox">
                        <Setter Property="TextWrapping"  Value="Wrap"/>
                    </Style>
                </AutoSuggestBox.TextBoxStyle>
                <AutoSuggestBox.BorderBrush>
                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                </AutoSuggestBox.BorderBrush>
                <Interactivity:Interaction.Behaviors>
                    <Behaviors:KeyBehavior Key="Enter">
                        <Core:InvokeCommandAction Command="{Binding Action}" CommandParameter="{Binding}"/>
                    </Behaviors:KeyBehavior>
                    <Core:EventTriggerBehavior EventName="GotFocus">
                        <Core:ChangePropertyAction PropertyName="Background" Value="Transparent"/>
                    </Core:EventTriggerBehavior>
                    <Core:EventTriggerBehavior EventName="TextChanged">
                        <Core:InvokeCommandAction Command="{StaticResource AutoSuggestFilterItemsCommand}" CommandParameter="{Binding}"/>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </AutoSuggestBox>
            <Button Grid.Column="1" MaxWidth="120" Content="{Binding ButtonText, FallbackValue=Send}" Margin="5,0,0,0" Background="{StaticResource ButtonBackgroundBrush}">
                <Interactivity:Interaction.Behaviors>
                    <Behaviors:EventTriggerBehaviorBase EventName="Tapped" >
                        <Core:InvokeCommandAction Command="{Binding Action}" CommandParameter="{Binding}"/>
                    </Behaviors:EventTriggerBehaviorBase>
                </Interactivity:Interaction.Behaviors>
            </Button>
        </Grid>
    </DataTemplate>
    <!-- End Button Templates -->

    <ResourceDictionary.ThemeDictionaries>

        <ResourceDictionary x:Key="Light">
            <Color x:Key="SystemAccentColor">Crimson</Color>

            <SolidColorBrush x:Key="CustomColorBrush" Color="{StaticResource CustomColor}" />
            <SolidColorBrush x:Key="ContrastColorBrush" Color="{StaticResource ContrastColor}" />
            <SolidColorBrush x:Key="ExtendedSplashBackground" Color="{StaticResource CustomColor}" />
            <SolidColorBrush x:Key="ExtendedSplashForeground" Color="{StaticResource ContrastColor}" />

            <Style TargetType="controls:HamburgerMenu">
                <Setter Property="AccentColor" Value="{StaticResource CustomColor}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{StaticResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{StaticResource NormalMinWidth}" />
                <Setter Property="VisualStateWideMinWidth" Value="{StaticResource WideMinWidth}" />
            </Style>

            <Style TargetType="controls:PageHeader">
                <Setter Property="Background" Value="{ThemeResource CustomColorBrush}" />
                <Setter Property="Foreground" Value="{ThemeResource ContrastColorBrush}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{StaticResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{StaticResource NormalMinWidth}" />
            </Style>

            <Style TargetType="controls:Resizer">
                <Setter Property="GrabberBrush" Value="{ThemeResource CustomColorBrush}" />
                <Setter Property="GrabberVisibility" Value="Visible" />
            </Style>

        </ResourceDictionary>

        <ResourceDictionary x:Key="Default">
            <Color x:Key="SystemAccentColor">Crimson</Color>

            <SolidColorBrush x:Key="CustomColorBrush" Color="{StaticResource CustomColor}" />
            <SolidColorBrush x:Key="ContrastColorBrush" Color="{StaticResource ContrastColor}" />
            <SolidColorBrush x:Key="ExtendedSplashBackground" Color="{StaticResource CustomColor}" />
            <SolidColorBrush x:Key="ExtendedSplashForeground" Color="{StaticResource ContrastColor}" />

            <Style TargetType="controls:HamburgerMenu">

                <!--

                Windows 10 2015 (1511) Hamburger Menu Style
                Simply replace AccentColor with the follow setters.

                <Setter Property="HamburgerBackground" Value="{StaticResource CustomColorBrush}" />
                <Setter Property="HamburgerForeground" Value="White" />
                <Setter Property="NavAreaBackground" Value="#FF2C2C2C" />
                <Setter Property="NavButtonForeground" Value="White" />
                <Setter Property="NavButtonBackground" Value="Transparent" />
                <Setter Property="NavButtonHoverForeground" Value="White" />
                <Setter Property="NavButtonHoverBackground" Value="#FF585858" />
                <Setter Property="NavButtonPressedForeground" Value="White" />
                <Setter Property="NavButtonPressedBackground" Value="#FF848484" />
                <Setter Property="NavButtonCheckedForeground" Value="White" />
                <Setter Property="NavButtonCheckedBackground" Value="#FF2A4E6C" />
                <Setter Property="NavButtonCheckedIndicatorBrush" Value="Transparent" />

                -->

                <Setter Property="AccentColor" Value="{StaticResource CustomColor}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{StaticResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{StaticResource NormalMinWidth}" />
                <Setter Property="VisualStateWideMinWidth" Value="{StaticResource WideMinWidth}" />
            </Style>

            <Style TargetType="controls:PageHeader">
                <Setter Property="Background" Value="{ThemeResource CustomColorBrush}" />
                <Setter Property="Foreground" Value="{ThemeResource ContrastColorBrush}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{StaticResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{StaticResource NormalMinWidth}" />
            </Style>

            <Style TargetType="controls:Resizer">
                <Setter Property="GrabberBrush" Value="{ThemeResource CustomColorBrush}" />
                <Setter Property="GrabberVisibility" Value="Visible" />
            </Style>

        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <Color x:Key="SystemAccentColor">Crimson</Color>

            <SolidColorBrush x:Key="ExtendedSplashBackground" Color="Black" />
            <SolidColorBrush x:Key="ExtendedSplashForeground" Color="White" />

            <Style TargetType="controls:HamburgerMenu">
                <Setter Property="PaneBorderThickness" Value="0" />
                <Setter Property="SecondarySeparator" Value="{ThemeResource SystemColorWindowTextColor}" />
                <Setter Property="NavButtonBackground" Value="{ThemeResource SystemColorWindowColor}" />
                <Setter Property="NavButtonForeground" Value="{ThemeResource SystemColorWindowTextColor}" />
                <Setter Property="NavAreaBackground" Value="{ThemeResource SystemColorWindowColor}" />
                <Setter Property="HamburgerForeground" Value="{ThemeResource SystemColorWindowColor}" />
                <Setter Property="HamburgerBackground" Value="{ThemeResource SystemColorWindowTextColor}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{ThemeResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{ThemeResource NormalMinWidth}" />
                <Setter Property="VisualStateWideMinWidth" Value="{ThemeResource WideMinWidth}" />
            </Style>

            <Style TargetType="controls:PageHeader">
                <Setter Property="Background" Value="{ThemeResource SystemColorWindowColor}" />
                <Setter Property="Foreground" Value="{ThemeResource SystemColorWindowTextColor}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{ThemeResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{ThemeResource NormalMinWidth}" />
            </Style>
        </ResourceDictionary>

        <ResourceDictionary x:Key="Dark">
            <SolidColorBrush x:Key="SystemControlHighlightAccentBrush" Color="Crimson" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>
</ResourceDictionary>


